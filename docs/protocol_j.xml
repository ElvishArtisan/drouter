<?xml version="1.0" encoding="ISO-8859-1"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink">
<info>
  <title>Protocol J</title>
  <subtitle>
    RESTful API for the monitoring and control of endpoint routers
  </subtitle>
  <edition>0.0.0</edition>
  <author>
    <personname>
      <firstname>Fred</firstname>
      <surname>Gleason</surname>
      <email>fredg@paravelsystems.com</email>
    </personname>
  </author>
</info>

<sect1 xml:id="sect.overview">
  <title>Overview</title>
  <para>
    Messages to the Protocol J routing service are by means of a
    TCP SOCK_STREAM connection to TCP port 9600 on the host server.
  </para>
  <sect2 xml:id="sect.overview.message_command_syntax">
    <title>Message Command Syntax</title>
    <para>
      Every message in ProtocolJ is a valid JSON document.
      A minimally valid message has the form:
    </para>
    <literallayout class="monospaced">
{
    &quot;<replaceable>operation</replaceable>&quot;: {
        &quot;<replaceable>param1</replaceable>&quot;: <replaceable>value1</replaceable>[,]
        [...]
        &quot;<replaceable>paramN</replaceable>&quot;: <replaceable>valueN</replaceable>
    }
}
    </literallayout>
    <para>
      JSON objects as well as values may be nested within the body of an
      operation.
    </para>
  </sect2>
  <sect2 xml:id="sect.overview.message_command_syntax.specifying_time">
    <title>Specifying Time</title>
    <para>
      All time values in ProtocolJ are assumed to be in the UTC timezone,
      encoded in <link xlink:href="https://www.ibm.com/docs/en/i/7.5?topic=types-xstime">xs.time format</link> as follows:
    </para>
    <para>
      <replaceable>HH</replaceable><userinput>:</userinput><replaceable>MM</replaceable><userinput>:</userinput><replaceable>SS</replaceable><userinput>Z</userinput>
    </para>
      <table xml:id="table.overview.message_command_syntax.specifying_time" frame="all" pgwide="0">
	<title>Time Format Elements</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Element" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Range" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Element
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		Valid Range
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>HH</replaceable>
	      </entry>
	      <entry>
		The hours component of the time, in twenty-four hour format
		and zero-padded.
	      </entry>
	      <entry>
		<userinput>00</userinput> through <userinput>23</userinput>
		inclusive.
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>MM</replaceable>
	      </entry>
	      <entry>
		The minutes component of the time, zero-padded.
	      </entry>
	      <entry>
		<userinput>00</userinput> through <userinput>59</userinput>
		inclusive.
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>SS</replaceable>
	      </entry>
	      <entry>
		The seconds component of the time, zero-padded.
	      </entry>
	      <entry>
		<userinput>00</userinput> through <userinput>60</userinput>
		inclusive.
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
      <sect3 xml:id="sect.overview.message_command_syntax.specifying_time.examples">
	<title>Examples</title>
	<para>
	  The following examples all express the same time (14:30:15 UTC):
	</para>
	<para>
	  <userinput>14:30:15-00:00</userinput>
	</para>
	<para>
	  <userinput>19:30:15-05:00</userinput>
	</para>
	<para>
	  <userinput>12:00:15+02:30</userinput>
	</para>
      </sect3>
  </sect2>

  <sect2 xml:id="sect.overview.message_command_syntax.action_parameters">
    <title>Action Parameters</title>
    <para>
      The parameters for each action record are expressed as follows:
      <literallayout class="monospaced">
{
    "id": <replaceable>id-num</replaceable>,
    "time": <replaceable>time</replaceable>,
    "sunday":<replaceable>boolean</replaceable>,
    "monday":<replaceable>boolean</replaceable>,
    "tuesday":<replaceable>boolean</replaceable>,
    "wednesday":<replaceable>boolean</replaceable>,
    "thursday":<replaceable>boolean</replaceable>,
    "friday":<replaceable>boolean</replaceable>,
    "saturday":<replaceable>boolean</replaceable>,
    "destination":<replaceable>dest-num</replaceable>,
    "destinationName":<replaceable>dest-name</replaceable>,
    "destinationHostAddress":<replaceable>dest-host-addr</replaceable>,
    "destinationHostName":<replaceable>dest-host-name</replaceable>,
    "source":<replaceable>src-num</replaceable>,
    "sourceName":<replaceable>src-name</replaceable>,
    "sourceHostAddress":<replaceable>src-host-addr</replaceable>,
    "sourceHostName":<replaceable>src-host-name</replaceable>,
    "comment"<replaceable>str</replaceable>
}
      </literallayout>
      <table xml:id="table.commands_syntax.action_record_parameters" frame="all" pgwide="0">
	<title>Action Record Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>id</replaceable>
	      </entry>
	      <entry>
		ID number of action entry, or <userinput>-1</userinput>
		to indicate creation of a new record. [Required]
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>time</replaceable>
	      </entry>
	      <entry>
		Scheduled UTC time of action, in xs.time format. See
		<xref linkend="sect.overview.message_command_syntax.specifying_time"/> for details. [Required]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		&quot;true&quot; indicates action is to be executed on
		indicated day. [Required]
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Destination number. [Required]
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-name</replaceable>
	      </entry>
	      <entry>
		Destination name. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-host-addr</replaceable>
	      </entry>
	      <entry>
		Destination node address. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-host-name</replaceable>
	      </entry>
	      <entry>
		Destination node name. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-num</replaceable>
	      </entry>
	      <entry>
		Source number. [Required]
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-name</replaceable>
	      </entry>
	      <entry>
		Source name. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-host-addr</replaceable>
	      </entry>
	      <entry>
		Source node address. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-host-name</replaceable>
	      </entry>
	      <entry>
		Source node name. [Optional]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>str</replaceable>
	      </entry>
	      <entry>
		Comment text. [Required]
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </para>
  </sect2>
</sect1>

<sect1 xml:id="sect.commands">
  <title>Commands</title>
  <para>
    The following commands are provided:
  </para>

  <!-- *********************************** -->
  <!-- *** START OF ActionDelete COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.actiondelete">
    <title>ActionDelete</title>
    <para>
      Delete an existing action record.
    </para>
    <sect3 xml:id="sect.commands.actiondelete.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "actiondelete": {
        "id": <replaceable>id</replaceable>
    }
}
      </literallayout>
      <para>
      <table xml:id="table.commands.actiondelete_parameters" frame="all" pgwide="0">
	<title>ActionDelete Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>id</replaceable>
	      </entry>
	      <entry>
		ID number of action entry. [Required]
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.actiondelete.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "actiondelete": {
        <replaceable>id</replaceable>
    }
}
      </literallayout>
    </sect3>

    <sect3 xml:id="sect.commands.actiondelete.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.actiondelete.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "actiondelete": {
        "id": 1234,
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.actiondelete.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "actiondelete": {
        "id": 1234,
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF ActionDelete COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF ActionEdit COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.actionedit">
    <title>ActionEdit</title>
    <para>
      Modify the parameters of a new or existing action record.
    </para>
    <sect3 xml:id="sect.commands.actionedit.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "actionedit": {
        <replaceable>action-params</replaceable>
    }
}
      </literallayout>
      <para>
	See <xref linkend="sect.overview.message_command_syntax.action_parameters"/> for
	the contents of <replaceable>action-params</replaceable>.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.actionedit.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "actionlist": {
        "router": <replaceable>router-num</replaceable>
        "action": {
            <replaceable>action-params</replaceable>
        }
    }
}
      </literallayout>
      <para>
	See <xref linkend="table.commands.actionlist.send.parameters"/> for
	the contents of <replaceable>action-fields</replaceable>.
      </para>
    </sect3>

    <sect3 xml:id="sect.commands.actionedit.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.actionedit.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "actionedit": {
        "router": 2,
        "action": {
            "id": 1234,
            "time": "16:00:00Z",
            "sunday": false,
            "monday": true,
            "tuesday": false,
            "wednesday": false,
            "thursday": false,
            "friday": false,
            "saturday": false,
            "destination": 2,
            "source": 3,
            "comment": "Take input 3 to output 2"
        }
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.actionedit.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "actionlist": {
        "router": 2,
        "action": {
            "id": 1234,
            "time": "16:00:00Z",
            "sunday": false,
            "monday": true,
            "tuesday": false,
            "wednesday": false,
            "thursday": false,
            "friday": false,
            "saturday": false,
            "destination": 2,
            "source": 3,
            "comment": "Take input 3 to output 2"
        }
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF ActionEdit COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF ActionList COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.actionlist">
    <title>ActionList</title>
    <para>
      Return a list of configured actions for a given router
    </para>
    <sect3 xml:id="sect.commands.actionlist.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "actionlist": {
        "router": <replaceable>router-num</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.actionlist.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.actionlist.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    {
        "router": <replaceable>router-num</replaceable>
        "actionlist": [
            {
                <replaceable>action-params</replaceable>
            } ...
        ]
    }
}
      </literallayout>
      <table xml:id="table.commands.actionlist.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>id</replaceable>
	      </entry>
	      <entry>
		ID number of action entry.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>time</replaceable>
	      </entry>
	      <entry>
		Scheduled time of action, in xs.time format. See
		<xref linkend="sect.overview.message_command_syntax.specifying_time"/> for details.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		&quot;true&quot; indicates action is to be executed on
		indicated day
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Destination number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-name</replaceable>
	      </entry>
	      <entry>
		Destination name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-num</replaceable>
	      </entry>
	      <entry>
		Source number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-name</replaceable>
	      </entry>
	      <entry>
		Source name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>str</replaceable>
	      </entry>
	      <entry>
		Comment text
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.actionlist.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.actionlist.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "actionlist" {
        "router": 11
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.actionlist.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "actionlist": [
        {
            "comment": "1st Test Action",
            "destination": 1,
            "destinationHostAddress": "192.168.21.4",
            "destinationHostName": "ANODE",
            "destinationName": "DST 1",
            "friday": true,
            "id": 1,
            "isActive": true,
            "monday": true,
            "saturday": false,
            "source": 1,
            "sourceHostAddress": "192.168.21.4",
            "sourceHostName": "ANODE",
            "sourceName": "SRC 1",
            "sunday": false,
            "thursday": true,
            "time": "00:00:00",
            "tuesday": true,
            "wednesday": true
        },
        {
            "comment": "2nd Test Action",
            "destination": 1,
            "destinationHostAddress": "192.168.21.4",
            "destinationHostName": "ANODE",
            "destinationName": "DST 1",
            "friday": false,
            "id": 2,
            "isActive": true,
            "monday": false,
            "saturday": true,
            "source": 2,
            "sourceHostAddress": "192.168.21.4",
            "sourceHostName": "ANODE",
            "sourceName": "SRC 2",
            "sunday": true,
            "thursday": false,
            "time": "01:00:00",
            "tuesday": false,
            "wednesday": false
        },
        {
            "comment": "3rd Test Action",
            "destination": 1,
            "destinationHostAddress": "192.168.21.4",
            "destinationHostName": "ANODE",
            "destinationName": "DST 1",
            "friday": true,
            "id": 3,
            "isActive": true,
            "monday": true,
            "saturday": false,
            "source": 3,
            "sourceHostAddress": "192.168.21.4",
            "sourceHostName": "ANODE",
            "sourceName": "SRC 3",
            "sunday": false,
            "thursday": false,
            "time": "02:00:00",
            "tuesday": false,
            "wednesday": true
        }
    ],
    "router": 11
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF ActionList COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF ActionStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.actionstat">
    <title>ActionStat</title>
    <para>
      Returns information on the current state of actions.
    </para>
    <sect3 xml:id="sect.commands.actionstat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "actionstat": {
        "router": <replaceable>router-num</replaceable>.
        "sendUpdates": <replaceable>update</replaceable>
    }
}
      </literallayout>
      <para>
      <table xml:id="table.commands.actionstat_send_parameters" frame="all" pgwide="0">
	<title>ActionStat Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>update</replaceable>
	      </entry>
	      <entry>
		Update flag. If <userinput>true</userinput>, an
		<computeroutput>ActionStat</computeroutput> message will also
		be sent each time one of the ID parameters changes for the
		specified router.
	      </entry>
	      <entry>
		Boolean
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.actionstat.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "actionstat": {
        "router": <replaceable>router-num</replaceable>,
        "sendUpdates": <replaceable>update</replaceable>
        "nextId": <replaceable>id-array</replaceable>
    }
}
      </literallayout>
      <para>
	<table xml:id="table.commands.actionstat_response_parameters" frame="all" pgwide="0">
	  <title>ActionStat Response Parameters</title>
	  <tgroup cols="3" align="left" colstep="1" rowstep="1">
	    <colspec colname="Parameter" colwidth="1.5*"/>
	    <colspec colname="Value" colwidth="5.0*"/>
	    <colspec colname="Type" colwidth="1.5*"/>
	    <thead>
	      <row>
		<entry>
		  Parameter
		</entry>
		<entry>
		  Meaning
		</entry>
		<entry>
		  JSON Value
		</entry>
	      </row>
	    </thead>
	    <tbody>
	      <row>
		<entry>
		  <replaceable>router-num</replaceable>
		</entry>
		<entry>
		  Router number.
		</entry>
		<entry>
		  Number
		</entry>
	      </row>
	      <row>
		<entry>
		  <replaceable>update</replaceable>
		</entry>
		<entry>
		  The current state of the update flag. See
		  <xref linkend="table.commands.actionstat_send_parameters"/>
		  for details.
		</entry>
		<entry>
		  Boolean
		</entry>
	      </row>
	      <row>
		<entry>
		  <replaceable>id-array</replaceable>
		</entry>
		<entry>
		  List of zero or more action ids.
		</entry>
		<entry>
		  Array
		</entry>
	      </row>
	    </tbody>
	  </tgroup>
	</table>
      </para>
    </sect3>

    <sect3 xml:id="sect.commands.actionstat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.actionstat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "actionstat": {
        "router": 2,
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.actionstat.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "actionstat": {
        "router": 2,
        "nextId": [1234,4321]
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF ActionStat COMMAND **** -->
  <!-- *********************************** -->

  <!-- ************************************** -->
  <!-- *** START OF ActivateRoute COMMAND *** -->
  <!-- ************************************** -->
  <sect2 xml:id="sect.commands.activateroute">
    <title>ActivateRoute</title>
    <para>
      Command a crosspoint change
    </para>
    <sect3 xml:id="sect.commands.activateroute.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "activateroute": {
        "router": <replaceable>router-num</replaceable>,
        "destination": <replaceable>dest-num</replaceable>,
        "source": <replaceable>src-num</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.activateroute.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Destination number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>src-num</replaceable>
	      </entry>
	      <entry>
		Source number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.activateroute.response_syntax">
      <title>Response Syntax</title>
      <para>
	See the <literal>routestat</literal> command response in
	<xref linkend="sect.commands.routestat"/>
      </para>
    </sect3>
  </sect2>
  <!-- ************************************** -->
  <!-- **** END OF ActivateRoute COMMAND **** -->
  <!-- ************************************** -->

  <!-- ************************************* -->
  <!-- *** START OF ActivateSnap COMMAND *** -->
  <!-- ************************************* -->
  <sect2 xml:id="sect.commands.activatesnap">
    <title>ActivateSnap</title>
    <para>
      Execute a route snapshot
    </para>
    <sect3 xml:id="sect.commands.activatesnap.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "activatesnap": {
        "router": <replaceable>router-num</replaceable>,
        "snapshot": <replaceable>snap-name</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.activatesnap.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>snap-name</replaceable>
	      </entry>
	      <entry>
		Name of snapshot
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.activatesnap.response_syntax">
      <title>Response Syntax</title>
      <para>
	See the <literal>routestat</literal> command response in
	<xref linkend="sect.commands.routestat"/>
      </para>
    </sect3>

    <sect3 xml:id="sect.commands.activatesnap.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.activatesnap.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "activatesnap" {
        "router": 2,
        "snapshot": "My Snapshot"
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.activatesnap.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "routestat": {
        "router": 2,
        "destination": 3,
        "source": 4
    }
}
{
    "routestat": {
        "router": 2,
        "destination": 10,
        "source": 7
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ************************************* -->
  <!-- **** END OF ActivateSnap COMMAND **** -->
  <!-- ************************************* -->

  <!-- ********************************** -->
  <!-- *** START OF DestNames COMMAND *** -->
  <!-- ********************************** -->
  <sect2 xml:id="sect.commands.destnames">
    <title>DestNames</title>
    <para>
      Return the list of destinations on a given router
    </para>
    <sect3 xml:id="sect.commands.destnames.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "destnames": {
        "router": <replaceable>router-num</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.destnames.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.destnames.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "router": <replaceable>router-num</replaceable>
    "destnames": [
        {
            "number": <replaceable>num</replaceable>,
            "name": <replaceable>name-str</replaceable>,
            "hostDescription":<replaceable>dest-str</replaceable>,
            "hostAddress":<replaceable>ipv4-addr</replaceable>,
            "hostName":<replaceable>host-str</replaceable>,
            "slot":<replaceable>slot-num</replaceable>
        } ...
    ]
}
      </literallayout>
      <table xml:id="table.commands.destnames.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Endpoint number of the destination
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>name</replaceable>
	      </entry>
	      <entry>
		Name of the destination
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-str</replaceable>
	      </entry>
	      <entry>
		Free-form description of the host device (Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>ipv4-addr</replaceable>
	      </entry>
	      <entry>
		IPv4 address of the host device, in dotted-quad notation
		(Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>host-str</replaceable>
	      </entry>
	      <entry>
		Hostname of the host device (Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>slot-num</replaceable>
	      </entry>
	      <entry>
		Slot number on the host device (Livewire only)
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.destnames.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.destnames.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "destnames" {
        "router": 11
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.destnames.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "destnames": [
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "DST 1",
            "number": 1,
            "slot": 1
        },
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "DST 2",
            "number": 2,
            "slot": 2
        },
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "DST 3",
            "number": 3,
            "slot": 3
        },
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "DST 4",
            "number": 4,
            "slot": 4
        }
    ],
    "router": 11
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ********************************** -->
  <!-- **** END OF DestNames COMMAND **** -->
  <!-- ********************************** -->


  <!-- *********************************** -->
  <!-- *** START OF EventStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.eventstat">
    <title>EventStat</title>
    <para>
      Return the list of logged system events.
    </para>
    <sect3 xml:id="sect.commands.eventstat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "eventstat": {
        "sendUpdates": <replaceable>update</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.eventstat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>update</replaceable>
	      </entry>
	      <entry>
		Update flag. If <userinput>true</userinput>, an
		<computeroutput>EventStat</computeroutput> will also
		be sent each time a new event is logged.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.eventstat.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "eventstat": {
        "sendUpdates": <replaceable>update</replaceable>,
        "id": <replaceable>evt-id</replaceable>,
        "datetime": <replaceable>date-time</replaceable>,
        "type": <replaceable>type-str</replaceable>,
        "status": <replaceable>status</replaceable>,
        "originName": <replaceable>origin-name</replaceable>,
        "originAddress": <replaceable>origin-addr</replaceable>,
        "router": <replaceable>router-num</replaceable>,
        "routerName": <replaceable>router-name</replaceable>,
        "source": <replaceable>source-num</replaceable>,
        "sourceName": <replaceable>source-name</replaceable>,
        "destination": <replaceable>destination-num</replaceable>,
        "destinationName": <replaceable>destination-name</replaceable>,
        "comment": <replaceable>comment-str</replaceable>
    }
}
      </literallayout>
      <table xml:id="table.commands.eventstat.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>update</replaceable>
	      </entry>
	      <entry>
		The current state of the update flag.
	      </entry>
	      <entry>
		Boolean
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>evt-id</replaceable>
	      </entry>
	      <entry>
		ID number of event entry.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>date-time</replaceable>
	      </entry>
	      <entry>
		Date-time of the event, in xs.datetime format.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>type-str</replaceable>
	      </entry>
	      <entry>
		Type of logged event.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>status</replaceable>
	      </entry>
	      <entry>
		Indicates success or failure of event.
	      </entry>
	      <entry>
		Boolean
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>router-name</replaceable>
	      </entry>
	      <entry>
		Router name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-num</replaceable>
	      </entry>
	      <entry>
		Source number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>source-name</replaceable>
	      </entry>
	      <entry>
		Source name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>destination-num</replaceable>
	      </entry>
	      <entry>
		Destination number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>destination-name</replaceable>
	      </entry>
	      <entry>
		Destination name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>comment-str</replaceable>
	      </entry>
	      <entry>
		Comment text
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.eventstat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.eventstat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "eventstat" {
        "sendUpdates": true
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.eventstat.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "eventstat": {
        "router": 2,
        "action0": {
            "id": 1,
            "time": "16:00:00Z",
            "sunday": false,
            "monday": true,
            "tuesday": false,
            "wednesday": false,
            "thursday": false,
            "friday": false,
            "saturday": false,
            "destination": 4,
            "destinationName": "DST 4",
            "source": 4,
            "sourceName": "SRC 4",
            "comment": "Take input 4 to output 4"
        },
        "action1": {
            "id": 2,
            "time": "16:10:00Z",
            "sunday": false,
            "monday": true,
            "tuesday": false,
            "wednesday": false,
            "thursday": false,
            "friday": false,
            "saturday": false,
            "destination": 4,
            "destinationName": "DST 4",
            "source": 5,
            "sourceName": "RDProbe",
            "comment": "Take input 5 to output 4"
        }
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF EventStat COMMAND **** -->
  <!-- *********************************** -->


  <!-- *********************************** -->
  <!-- *** START OF GPIStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.gpistat">
    <title>GPIStat</title>
    <para>
      Query the state of one or more GPIs.
    </para>
    <sect3 xml:id="sect.commands.gpistat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "gpistat": {
        "router": <replaceable>router-num</replaceable>[,]
        ["number": <replaceable>gpi-num</replaceable>]
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.gpistat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpi-num</replaceable>
	      </entry>
	      <entry>
		GPI number (optional). If not given, the response will include
		<emphasis>all</emphasis> GPIs associated with the specified
		router.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.gpistat.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "gpistat": {
        "router": <replaceable>router-num</replaceable>,
        "number": <replaceable>gpi-num</replaceable>,
        "code": <replaceable>state-code</replaceable>
    }
}
      </literallayout>
      <table xml:id="table.commands.gpistat.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpi-num</replaceable>
	      </entry>
	      <entry>
		The endpoint number of the GPI.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>state-code</replaceable>
	      </entry>
	      <entry>
		Code representing the states of the five lines of the
		specified GPI, with &quot;h&quot; indicating OFF, and
		&quot;h&quot; indicating ON.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.gpistat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.gpistat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "gpistat" {
        "router": 2,
        "number": 3
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.gpistat.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "gpistat": {
        "router": 2,
        "number": 3,
        "code": "llhlh"
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF GPIStat COMMAND **** -->
  <!-- *********************************** -->


  <!-- *********************************** -->
  <!-- *** START OF GPOStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.gpostat">
    <title>GPOStat</title>
    <para>
      Query the state of one or more GPOs.
    </para>
    <sect3 xml:id="sect.commands.gpostat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "gpostat": {
        "router": <replaceable>router-num</replaceable>[,]
        ["number": <replaceable>gpo-num</replaceable>]
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.gpostat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpo-num</replaceable>
	      </entry>
	      <entry>
		GPO number (optional). If not given, the response will include
		<emphasis>all</emphasis> GPOs associated with the specified
		router.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.gpostat.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "gpostat": {
        "router": <replaceable>router-num</replaceable>,
        "number": <replaceable>gpo-num</replaceable>,
        "code": <replaceable>state-code</replaceable>
    }
}
      </literallayout>
      <table xml:id="table.commands.gpostat.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpo-num</replaceable>
	      </entry>
	      <entry>
		The endpoint number of the GPO.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>state-code</replaceable>
	      </entry>
	      <entry>
		Code representing the states of the five lines of the
		specified GPO, with &quot;h&quot; indicating OFF, and
		&quot;h&quot; indicating ON.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.gpostat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.gpostat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "gpostat" {
        "router": 2,
        "number": 3
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.gpostat.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "gpostat": {
        "router": 2,
        "number": 3,
        "code": "llhlh"
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF GPOStat COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF MaskGPIStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.maskgpistat">
    <title>MaskGPIStat</title>
    <para>
      Enable or suppress GPIStat notifications.
    </para>
    <sect3 xml:id="sect.commands.maskgpistat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "maskgpistat": {
        "state": <replaceable>boolean</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.maskgpistat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		Enable/disable GPIStat notifications
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.maskgpistat.response_syntax">
      <title>Response Syntax</title>
      <para>
	No response is sent for this command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.maskgpistat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.maskgpistat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "maskgpistat" {
        "state": true
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ************************************ -->
  <!-- **** END OF MaskGPIStat COMMAND **** -->
  <!-- ************************************ -->

  <!-- *********************************** -->
  <!-- *** START OF MaskGPOStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.maskgpostat">
    <title>MaskGPOStat</title>
    <para>
      Enable or suppress GPOStat notifications.
    </para>
    <sect3 xml:id="sect.commands.maskgpostat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "maskgpostat": {
        "state": <replaceable>boolean</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.maskgpostat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		Enable/disable GPOStat notifications
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.maskgpostat.response_syntax">
      <title>Response Syntax</title>
      <para>
	No response is sent for this command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.maskgpostat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.maskgpostat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "maskgpostat" {
        "state": true
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ************************************ -->
  <!-- **** END OF MaskGPOStat COMMAND **** -->
  <!-- ************************************ -->

  <!-- *********************************** -->
  <!-- *** START OF MaskRouteStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.maskroutestat">
    <title>MaskRouteStat</title>
    <para>
      Enable or suppress RouteStat notifications.
    </para>
    <sect3 xml:id="sect.commands.maskroutestat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "maskroutestat": {
        "state": <replaceable>boolean</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.maskroutestat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		Enable/disable RouteStat notifications
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.maskroutestat.response_syntax">
      <title>Response Syntax</title>
      <para>
	No response is sent for this command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.maskroutestat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.maskroutestat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "maskroutestat" {
        "state": true
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ************************************ -->
  <!-- **** END OF MaskRouteStat COMMAND **** -->
  <!-- ************************************ -->

  <!-- *********************************** -->
  <!-- *** START OF MaskStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.maskstat">
    <title>MaskStat</title>
    <para>
      Enable or suppress GPIStat, GPOStat and RouteStat notifications.
    </para>
    <sect3 xml:id="sect.commands.maskstat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "maskstat": {
        "state": <replaceable>boolean</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.maskstat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>boolean</replaceable>
	      </entry>
	      <entry>
		Enable/disable GPIStat, GPOStat and RouteStat notifications
	      </entry>
	      <entry>
		&quot;true&quot; or &quot;false&quot;
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.maskstat.response_syntax">
      <title>Response Syntax</title>
      <para>
	No response is sent for this command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.maskstat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.maskstat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "maskstat" {
        "state": true
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ************************************ -->
  <!-- **** END OF MaskStat COMMAND **** -->
  <!-- ************************************ -->

  <!-- ***************************** -->
  <!-- *** START OF Ping COMMAND *** -->
  <!-- ***************************** -->
  <sect2 xml:id="sect.commands.ping">
    <title>Ping</title>
    <para>
      Return a pong object.
    </para>
    <sect3 xml:id="sect.commands.ping.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "ping": null
}
      </literallayout>
      <para>
	There are no send parameters for the ping command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.ping.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "pong": {
        "datetime": <replaceable>timestamp</replaceable>
    }
}
      </literallayout>
      <table xml:id="table.commands.ping.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>datestamp</replaceable>
	      </entry>
	      <entry>
		The datetime when the ping command was received, in
		xs.dateTime format.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.ping.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.ping.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "ping": null
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.ping.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "pong": {
        "datetime": "2024-02-15T14:28:01Z"
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF Ping COMMAND **** -->
  <!-- *********************************** -->


  <!-- *********************************** -->
  <!-- *** START OF RouterNames COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.routernames">
    <title>RouterNames</title>
    <para>
      Return a list of available routers.
    </para>
    <sect3 xml:id="sect.commands.routernames.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "routernames": null
}
      </literallayout>
      <para>
	There are no send parameters for the RouterNames command.
      </para>
    </sect3>
    <sect3 xml:id="sect.commands.routernames.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "routernames": [
        {
            "number": <replaceable>router-num</replaceable>,
            "name": <replaceable>router-name</replaceable>,
            "type": <replaceable>router-type</replaceable>
        } ...
    ]
}
<!--
    "routernames": {
        "router0": {
            "number": <replaceable>router-num</replaceable>,
            "name": <replaceable>router-name</replaceable>,
            "type": <replaceable>router-type</replaceable>
        }
        }[,]
    [...]
        "router<replaceable>N</replaceable>": {
            "number": <replaceable>router-num</replaceable>,
            "name": <replaceable>router-name</replaceable>,
            "type": <replaceable>router-type</replaceable>
        }
    }
}
-->
      </literallayout>
      <table xml:id="table.commands.routernames.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>router-name</replaceable>
	      </entry>
	      <entry>
		Name of the router.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>router-type</replaceable>
	      </entry>
	      <entry>
		Type of the router. Can be &quot;Audio&quot; or
		&quot;GPIO&quot;.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.routernames.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.routernames.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "routernames": null
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.routernames.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "routernames": [
        {
            "name": "Audio",
            "number": 1,
            "type": "Audio"
        },
        {
            "name": "GPIO",
            "number": 2,
            "type": "GPIO"
        },
        {
            "name": "SimpleAudio",
            "number": 11,
            "type": "Audio"
        }
    ]
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF RouterNames COMMAND **** -->
  <!-- *********************************** -->


  <!-- *********************************** -->
  <!-- *** START OF RouteStat COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.routestat">
    <title>RouteStat</title>
    <para>
      Query the state of one or more crosspoints.
    </para>
    <sect3 xml:id="sect.commands.routestat.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "routestat": {
        "router": <replaceable>router-num</replaceable>,
        "destination": <replaceable>dest-num</replaceable>[,]
        ["source": <replaceable>src-num</replaceable>]
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.routestat.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Destination number (optional). If not given, the response will
		include	<emphasis>all</emphasis> crosspoints associated with
		the specified router destination.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.routestat.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "routestat": {
        "router": <replaceable>router-num</replaceable>,
        "destination": <replaceable>dest-num</replaceable>,
        "source": <replaceable>src-num</replaceable>
    }
}
      </literallayout>
      <table xml:id="table.commands.routestat.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Destination number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>src-num</replaceable>
	      </entry>
	      <entry>
		Source number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.routestat.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.routestat.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "routestat" {
        "router": 2,
        "destination": 3
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.routestat.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "routestat": {
        "router": 2,
        "destination": 3,
        "source": 1
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF RouteStat COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF SnapShots COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.snapshots">
    <title>SnapShots</title>
    <para>
      Return a list of configured snapshots on the given router.
    </para>
    <sect3 xml:id="sect.commands.snapshots.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "snapshots": {
        "router": <replaceable>router-num</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.snapshots.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.snapshots.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "router": <replaceable>router-num</replaceable>
    "snapshots": [
        {
            "name": <replaceable>name-str</replaceable>
            "routes": [
                {
                    "input": <replaceable>input-num</replaceable>
                    "output": <replaceable>output-num</replaceable>
                } ...
            ]
        } ...
    ]
}
      </literallayout>
      <table xml:id="table.commands.snapshots.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>name</replaceable>
	      </entry>
	      <entry>
		Snapshot name
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>input</replaceable>
	      </entry>
	      <entry>
		Input number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>output</replaceable>
	      </entry>
	      <entry>
		Output number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.snapshots.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.snapshots.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "snapshots" {
        "router": 2
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.snapshots.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "router": 2,
    "snapshots": [
        {
            "name": "RDProbe_On",
            "routes": [
                {
                    "input": 29,
                    "output": 1
                },
                {
                    "input": 29,
                    "output": 2
                }
            ]
        },
        {
            "name": "RDProbe_Off",
            "routes": [
                {
                    "input": 30,
                    "output": 1
                },
                {
                    "input": 30,
                    "output": 2
                }
            ]
        }
    ]
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF SnapShots COMMAND **** -->
  <!-- *********************************** -->

  <!-- ********************************** -->
  <!-- *** START OF SourceNames COMMAND *** -->
  <!-- ********************************** -->
  <sect2 xml:id="sect.commands.sourcenames">
    <title>SourceNames</title>
    <para>
      Return the list of sources on a given router
    </para>
    <sect3 xml:id="sect.commands.sourcenames.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "sourcenames": {
        "router": <replaceable>router-num</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.sourcenames.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.sourcenames.response_syntax">
      <title>Response Syntax</title>
      <literallayout class="monospaced">
{
    "router": <replaceable>router-num</replaceable>
    "sourcenames": [
        {
            "number": <replaceable>num</replaceable>,
            "name": <replaceable>name-str</replaceable>,
            "hostDescription":<replaceable>dest-str</replaceable>,
            "hostAddress":<replaceable>ipv4-addr</replaceable>,
            "hostName":<replaceable>host-str</replaceable>,
            "slot":<replaceable>slot-num</replaceable>,
            "sourceNumber":<replaceable>stream-num</replaceable>,
            "streamAddress":<replaceable>stream-addr</replaceable>
        } ...
    ]    
}
      </literallayout>
      <table xml:id="table.commands.sourcenames.response.parameters" frame="all" pgwide="0">
	<title>Response Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-num</replaceable>
	      </entry>
	      <entry>
		Endpoint number of the source
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpio-addr</replaceable>
	      </entry>
	      <entry>
		IPv4 multicast stream address (Livewire GPIO only)
	      </entry>
	      <entry>
		IPv4 address / slot number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>name</replaceable>
	      </entry>
	      <entry>
		Name of the source
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>dest-str</replaceable>
	      </entry>
	      <entry>
		Free-form description of the host device (Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>ipv4-addr</replaceable>
	      </entry>
	      <entry>
		IPv4 address of the host device, in dotted-quad notation
		(Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>host-str</replaceable>
	      </entry>
	      <entry>
		Hostname of the host device (Livewire only)
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>slot-num</replaceable>
	      </entry>
	      <entry>
		Slot number on the host device (Livewire only)
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>stream-num</replaceable>
	      </entry>
	      <entry>
		Stream number (Livewire Audio only)
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>stream-addr</replaceable>
	      </entry>
	      <entry>
		IPv4 multicast stream address (Livewire Audio only)
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>

    <sect3 xml:id="sect.commands.sourcenames.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.sourcenames.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "sourcenames" {
        "router": 11
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.sourcenames.example.response">
	<title>Response</title>
	<literallayout class="monospaced">

    "router": 11,
    "sourcenames": [
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "SRC 1",
            "number": 1,
            "slot": 1,
            "sourceNumber": 401,
            "streamAddress": "239.192.1.145"
        },
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "SRC 2",
            "number": 2,
            "slot": 2,
            "sourceNumber": 402,
            "streamAddress": "239.192.1.146"
        },
        {
            "hostAddress": "192.168.21.4",
            "hostDescription": "Analog Node (Gen1)",
            "hostName": "ANODE",
            "name": "SRC 3",
            "number": 3,
            "slot": 3,
            "sourceNumber": 403,
            "streamAddress": "239.192.1.147"
        }
    ]
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- ********************************** -->
  <!-- **** END OF SourceNames COMMAND **** -->
  <!-- ********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF TriggerGPI COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.triggergpi">
    <title>TriggerGPI</title>
    <para>
      Set the specified virtual GPI's state for a specified duration.
      (Supported only by virtual GPI devices).
    </para>
    <sect3 xml:id="sect.commands.triggergpi.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "triggergpi": {
        "router": <replaceable>router-num</replaceable>
        "number": <replaceable>gpi-num</replaceable>
        "code": <replaceable>state-code</replaceable>
        "duration": <replaceable>msec</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.triggergpi.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpi-num</replaceable>
	      </entry>
	      <entry>
		The endpoint number of the GPI.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>state-code</replaceable>
	      </entry>
	      <entry>
		Code representing the states of the five lines of the
		specified GPI, with &quot;h&quot; indicating OFF, and
		&quot;l&quot; indicating ON.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>duration</replaceable>
	      </entry>
	      <entry>
		The duration to hold the state, in milliseconds. Omitting
                this parameter, or setting it to <userinput>0</userinput>
		indicates that the state is to be held indefinitely.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.triggergpi.response_syntax">
      <title>Response Syntax</title>
      <para>
	See the <literal>gpistat</literal> command response in
	<xref linkend="sect.commands.gpistat"/>
      </para>
    </sect3>

    <sect3 xml:id="sect.commands.triggergpi.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.triggergpi.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "triggergpi" {
        "router": 2
        "number": 3,
        "code": "llhlh"
        "duration": 0
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.triggergpi.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "gpistat": {
        "router": 2,
        "number": 3,
        "code": "llhlh"
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF TriggerGPI COMMAND **** -->
  <!-- *********************************** -->

  <!-- *********************************** -->
  <!-- *** START OF TriggerGPO COMMAND *** -->
  <!-- *********************************** -->
  <sect2 xml:id="sect.commands.triggergpo">
    <title>TriggerGPO</title>
    <para>
      Set the specified GPO's state for a specified duration.
    </para>
    <sect3 xml:id="sect.commands.triggergpo.send_syntax">
      <title>Send Syntax</title>
      <literallayout class="monospaced">
{
    "triggergpo": {
        "router": <replaceable>router-num</replaceable>
        "number": <replaceable>gpo-num</replaceable>
        "code": <replaceable>state-code</replaceable>
        "duration": <replaceable>msec</replaceable>
    }
}
      </literallayout>
      <para>
	Where:
      </para>
      <table xml:id="table.commands.triggergpo.send.parameters" frame="all" pgwide="0">
	<title>Send Parameters</title>
	<tgroup cols="3" align="left" colstep="1" rowstep="1">
	  <colspec colname="Parameter" colwidth="1.5*"/>
	  <colspec colname="Value" colwidth="5.0*"/>
	  <colspec colname="Type" colwidth="1.5*"/>
	  <thead>
	    <row>
	      <entry>
		Parameter
	      </entry>
	      <entry>
		Meaning
	      </entry>
	      <entry>
		JSON Value
	      </entry>
	    </row>
	  </thead>
	  <tbody>
	    <row>
	      <entry>
		<replaceable>router-num</replaceable>
	      </entry>
	      <entry>
		Router number
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>gpo-num</replaceable>
	      </entry>
	      <entry>
		The endpoint number of the GPO.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>state-code</replaceable>
	      </entry>
	      <entry>
		Code representing the states of the five lines of the
		specified GPO, with &quot;h&quot; indicating OFF, and
		&quot;l&quot; indicating ON.
	      </entry>
	      <entry>
		String
	      </entry>
	    </row>
	    <row>
	      <entry>
		<replaceable>duration</replaceable>
	      </entry>
	      <entry>
		The duration to hold the state, in milliseconds. Omitting
                this parameter, or setting it to <userinput>0</userinput>
		indicates that the state is to be held indefinitely.
	      </entry>
	      <entry>
		Number
	      </entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
    </sect3>
    <sect3 xml:id="sect.commands.triggergpo.response_syntax">
      <title>Response Syntax</title>
      <para>
	See the <literal>gpostat</literal> command response in
	<xref linkend="sect.commands.gpostat"/>
      </para>
    </sect3>

    <sect3 xml:id="sect.commands.triggergpo.example">
      <title>Example</title>
      <sect4 xml:id="sect.commands.triggergpo.example.send">
	<title>Send</title>
	<literallayout class="monospaced">
{
    "triggergpo" {
        "router": 2
        "number": 3,
        "code": "llhlh"
        "duration": 0
    }
}
	</literallayout>
      </sect4>
      <sect4 xml:id="sect.commands.triggergpo.example.response">
	<title>Response</title>
	<literallayout class="monospaced">
{
    "gpostat": {
        "router": 2,
        "number": 3,
        "code": "llhlh"
    }
}
	</literallayout>
      </sect4>
    </sect3>
  </sect2>
  <!-- *********************************** -->
  <!-- **** END OF TriggerGPO COMMAND **** -->
  <!-- *********************************** -->
</sect1>
</article>
